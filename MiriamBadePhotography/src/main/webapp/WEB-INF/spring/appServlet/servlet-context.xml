<?xml version="1.0" encoding="UTF-8"?>
<beans:beans
	xmlns="http://www.springframework.org/schema/mvc"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing 
		infrastructure -->

	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources 
		in the /WEB-INF/views directory -->
	<beans:bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/pages/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>

	<beans:bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">

		<!-- setting maximum upload size -->
		<beans:property name="maxUploadSize" value="50000000" />
	</beans:bean>

	<!-- LOCAL DB -->
	<beans:bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" 
		destroy-method="close"> <beans:property name="driverClassName" value="com.mysql.jdbc.Driver" 
		/> <beans:property name="url" value="jdbc:mysql://localhost:3306/mb_photography" 
		/> <beans:property name="username" value="root" /> <beans:property name="password" 
		value="Astrid123" /> </beans:bean>


	<!-- PROD -->
	<!--<beans:bean id="dataSource"
		class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<beans:property name="driverClassName"
			value="com.mysql.jdbc.Driver" />
		<beans:property name="url"
			value="jdbc:mysql://localhost:3306/miriamba_mb_photography" />
		<beans:property name="username" value="miriamba_root" />
		<beans:property name="password" value="$$Astrid123" />
	</beans:bean>-->

	<!-- Hibernate 4 SessionFactory Bean definition -->
	<beans:bean id="hibernate4AnnotatedSessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<beans:property name="dataSource" ref="dataSource" />
		<beans:property name="annotatedClasses">
			<beans:list>
				<beans:value>com.mb.photography.entity.Account</beans:value>
				<beans:value>com.mb.photography.entity.Product</beans:value>
				<beans:value>com.mb.photography.entity.Order</beans:value>
				<beans:value>com.mb.photography.entity.ProductCategory</beans:value>

			</beans:list>

		</beans:property>
		<beans:property name="hibernateProperties">
			<beans:props>
				<beans:prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect
				</beans:prop>
				<beans:prop key="hibernate.show_sql">true</beans:prop>
			</beans:props>
		</beans:property>
	</beans:bean>

	<!-- BEANS MAPPING -->

	<beans:bean id="accountDAO"
		class="com.mb.photography.dao.AccountDAOImpl">
		<beans:property name="sessionFactory"
			ref="hibernate4AnnotatedSessionFactory" />
	</beans:bean>
	<beans:bean id="accountService"
		class="com.mb.photography.service.AccountServiceImpl">
		<beans:property name="accountDAO" ref="accountDAO"></beans:property>
	</beans:bean>

	<beans:bean id="productCategoryDAO"
		class="com.mb.photography.dao.ProductCategoryDAOImpl">
		<beans:property name="sessionFactory"
			ref="hibernate4AnnotatedSessionFactory" />
	</beans:bean>
	<beans:bean id="productCategoryService"
		class="com.mb.photography.service.ProductCategoryServiceImpl">
		<beans:property name="productCategoryDAO"
			ref="productCategoryDAO"></beans:property>
	</beans:bean>

	<beans:bean id="productDAO"
		class="com.mb.photography.dao.ProductDAOImpl">
		<beans:property name="sessionFactory"
			ref="hibernate4AnnotatedSessionFactory" />
	</beans:bean>
	<beans:bean id="productService"
		class="com.mb.photography.service.ProductServiceImpl">
		<beans:property name="productDAO" ref="productDAO"></beans:property>
	</beans:bean>

	<!-- END BEANS MAPPING -->

	<context:component-scan
		base-package="com.mb.photography" />

	<tx:annotation-driven
		transaction-manager="transactionManager" />

	<beans:bean id="transactionManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<beans:property name="sessionFactory"
			ref="hibernate4AnnotatedSessionFactory" />
	</beans:bean>

</beans:beans>
